{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\React Course\\\\textutils\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\React Course\\\\textutils\\\\src\\\\components\\\\TextForm.js\";\n// import React, { useState } from \"react\";\n// export default function TextForm(props) {\n//   const handleUpClick = () => {\n//     let newText = text.toUpperCase();\n//     setText(newText);\n//     props.showAlert(\"Converted to Upper Case!\", \"success\");\n//   };\n//   const handleLowClick = () => {\n//     let newText = text.toLowerCase();\n//     setText(newText);\n//     props.showAlert(\"Converted to Lower Case!\", \"success\");\n//   };\n//   const handlesliceClick = () => {\n//     let newText = text.slice(5, 10);\n//     setText(newText);\n//     props.showAlert(\"Slice Method Apply on index 5 to 10.\", \"success\");\n//   };\n//   const handleReplaceClick = () => {\n//     let newText = text.replace(\"Text\", \"Replace\");\n//     setText(newText);\n//     props.showAlert(`Replace only \"Text\" word.`, \"success\");\n//   };\n//   const handleConcatClick = () => {\n//     let newText = text + \" This String is Concat\";\n//     setText(newText);\n//     props.showAlert(\"Concat Method Apllied\", \"success\");\n//   };\n//   const handleClearClick = () => {\n//     let newText = \"\";\n//     setText(newText);\n//     props.showAlert(\"Clear Screen!\", \"success\");\n//   };\n//   const handleCaptClick = () => {\n//     /*Explanation:\n//     ^\\w : first character of the string\n//     | : or\n//     \\s\\w : first character after whitespace\n//     (^\\w|\\s\\w) Capture the pattern.\n//     g Flag: Match all occurrences.*/\n//     let newText = text.replace(/(^\\w|\\s\\w)/g, (m) => m.toUpperCase());\n//     setText(newText);\n//     props.showAlert(\"Capitalized!\", \"success\");\n//   };\n//   const handleCopy = () => {\n//     let text = document.getElementById(\"myBox\");\n//     text.select();\n//     navigator.clipboard.writeText(text.value)\n//     // props.showAlert(\"Copied\", \"success\");\n//   };\n//   const handleExtraSpaces = () => {\n//     let newText = text.split(/[ ]+/);\n//     setText(newText.join(\" \"));\n//     props.showAlert(\"Removed Extra Space from given Lines\", \"success\");\n//   };\n//   const handleOnChange = (event) => {\n//     setText(event.target.value);\n//   };\n//   let [text, setText] = useState(\"\");\n//   return (\n//     <React.Fragment>\n//       <div style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\n//         <h2>{props.heading}</h2>\n//         <div className=\"  my-3\">\n//           <textarea\n//             style={{\n//               backgroundColor: props.mode === \"dark\" ? \"grey\" : \"light\",\n//               color: props.mode === \"dark\" ? \"white\" : \"black\",\n//             }}\n//             className=\"form-control\"\n//             value={text}\n//             onChange={handleOnChange}\n//             id=\"myBox\"\n//             rows=\"8\"\n//             placeholder=\"Enter Text here!\"\n//           ></textarea>\n//           <button className=\"btn btn-primary m-1\" onClick={handleUpClick}>\n//             Convert to UpperCase\n//           </button>\n//           <button className=\"btn btn-primary m-1\" onClick={handleLowClick}>\n//             Convert to lowerCase\n//           </button>\n//           <button className=\"btn btn-primary m-1\" onClick={handlesliceClick}>\n//             Slice\n//           </button>\n//           <button className=\"btn btn-primary m-1\" onClick={handleReplaceClick}>\n//             Replacing\n//           </button>\n//           <button className=\"btn btn-primary m-1\" onClick={handleConcatClick}>\n//             String concat\n//           </button>\n//           <button className=\"btn btn-primary m-1\" onClick={handleCaptClick}>\n//             Capitilized\n//           </button>\n//           <button className=\"btn btn-primary m-1\" onClick={handleCopy}>\n//             Copy Text\n//           </button>\n//           <button className=\"btn btn-primary m-1\" onClick={handleExtraSpaces}>\n//             Remove Extra Spaces\n//           </button>\n//           <button className=\"btn btn-primary m-1\" onClick={handleClearClick}>\n//             Clear\n//           </button>\n//         </div>\n//       </div>\n//       <div style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\n//         <h2>Summary</h2>\n//         <p>\n//           {/* Total words are: {text.length > 0 ? text.trim().split(\" \").length : 0}{\" \"} */}\n//           Total words are: {text.split(\" \").filter((element)=>{return element.length !== 0}).length}\n//           Total Character: {text.length}\n//         </p>\n//         <p>\n//           Taking Total time to read in minutes: {0.008 * text.split(\" \").length}\n//         </p>\n//         <h3>Preview</h3>\n//         <p>{text.length > 0 ? text : \"Enter Something above in TextBox!\"}</p>\n//       </div>\n//     </React.Fragment>\n//   );\n// }\nimport React, { useState } from \"react\";\nexport default function TextForm(props) {\n  var handleUpClick = function handleUpClick() {\n    var newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to Upper Case!\", \"success\");\n  };\n\n  var handleLowClick = function handleLowClick() {\n    var newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to Lower Case!\", \"success\");\n  };\n\n  var handlesliceClick = function handlesliceClick() {\n    var newText = text.slice(5, 10);\n    setText(newText);\n    props.showAlert(\"Slice Method Apply on index 5 to 10.\", \"success\");\n  };\n\n  var handleReplaceClick = function handleReplaceClick() {\n    var newText = text.replace(\"Text\", \"Replace\");\n    setText(newText);\n    props.showAlert(\"Replace only \\\"Text\\\" word.\", \"success\");\n  };\n\n  var handleConcatClick = function handleConcatClick() {\n    var newText = text + \" This String is Concat\";\n    setText(newText);\n    props.showAlert(\"Concat Method Apllied\", \"success\");\n  };\n\n  var handleClearClick = function handleClearClick() {\n    var newText = \"\";\n    setText(newText);\n    props.showAlert(\"Clear Screen!\", \"success\");\n  };\n\n  var handleCaptClick = function handleCaptClick() {\n    /*Explanation:\r\n    ^\\w : first character of the string\r\n    | : or\r\n    \\s\\w : first character after whitespace\r\n    (^\\w|\\s\\w) Capture the pattern.\r\n    g Flag: Match all occurrences.*/\n    var newText = text.replace(/(^\\w|\\s\\w)/g, function (m) {\n      return m.toUpperCase();\n    });\n    setText(newText);\n    props.showAlert(\"Capitalized!\", \"success\");\n  };\n\n  var handleCopy = function handleCopy() {\n    var text = document.getElementById(\"myBox\");\n    console.log('copy');\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    document.getSelection().removeAllRanges();\n    props.showAlert(\"Copied\", \"success\");\n  };\n\n  var handleExtraSpaces = function handleExtraSpaces() {\n    var newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Removed Extra Space from given Lines\", \"success\");\n  };\n\n  var handleOnChange = function handleOnChange(event) {\n    setText(event.target.value);\n  };\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: props.mode === \"dark\" ? \"white\" : \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, props.heading), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"  my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    style: {\n      backgroundColor: props.mode === \"dark\" ? \"#c7c7c7\" : \"light\",\n      color: props.mode === \"dark\" ? \"white\" : \"black\"\n    },\n    className: \"form-control\",\n    value: text,\n    onChange: handleOnChange,\n    id: \"myBox\",\n    rows: \"8\",\n    placeholder: \"Enter Text here!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: text.length === 0,\n    className: \"btn btn-primary m-2\",\n    onClick: handleUpClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, \"Convert to UpperCase\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: text.length === 0,\n    className: \"btn btn-primary m-2\",\n    onClick: handleLowClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, \"Convert to lowerCase\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: text.length === 0,\n    className: \"btn btn-primary m-2\",\n    onClick: handlesliceClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, \"Slice\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: text.length === 0,\n    className: \"btn btn-primary m-2\",\n    onClick: handleReplaceClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, \"Replacing\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: text.length === 0,\n    className: \"btn btn-primary m-2\",\n    onClick: handleConcatClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, \"String concat\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: text.length === 0,\n    className: \"btn btn-primary m-2\",\n    onClick: handleCaptClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, \"Capitilized\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: text.length === 0,\n    className: \"btn btn-primary m-2\",\n    onClick: handleCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, \"Copy Text\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: text.length === 0,\n    className: \"btn btn-primary m-2\",\n    onClick: handleExtraSpaces,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, \"Remove Extra Spaces\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: text.length === 0,\n    className: \"btn btn-primary m-2\",\n    onClick: handleClearClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, \"Clear\"))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: props.mode === \"dark\" ? \"white\" : \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, \"Summary\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  }, \"Total words are: \", text.split(\" \").filter(function (element) {\n    return element.length !== 0;\n  }).length, \"Total Character: \", text.length), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, \"Taking Total time to read in minutes: \", 0.008 * text.split(\" \").filter(function (element) {\n    return element.length !== 0;\n  }).length), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, \"Preview\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }, text.length > 0 ? text : \"Nothing to Preview!\")));\n}","map":{"version":3,"names":["React","useState","TextForm","props","handleUpClick","newText","text","toUpperCase","setText","showAlert","handleLowClick","toLowerCase","handlesliceClick","slice","handleReplaceClick","replace","handleConcatClick","handleClearClick","handleCaptClick","m","handleCopy","document","getElementById","console","log","select","navigator","clipboard","writeText","value","getSelection","removeAllRanges","handleExtraSpaces","split","join","handleOnChange","event","target","color","mode","heading","backgroundColor","length","filter","element"],"sources":["C:/Users/Administrator/Desktop/React Course/textutils/src/components/TextForm.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// export default function TextForm(props) {\r\n//   const handleUpClick = () => {\r\n//     let newText = text.toUpperCase();\r\n//     setText(newText);\r\n//     props.showAlert(\"Converted to Upper Case!\", \"success\");\r\n//   };\r\n//   const handleLowClick = () => {\r\n//     let newText = text.toLowerCase();\r\n//     setText(newText);\r\n//     props.showAlert(\"Converted to Lower Case!\", \"success\");\r\n//   };\r\n//   const handlesliceClick = () => {\r\n//     let newText = text.slice(5, 10);\r\n//     setText(newText);\r\n//     props.showAlert(\"Slice Method Apply on index 5 to 10.\", \"success\");\r\n//   };\r\n//   const handleReplaceClick = () => {\r\n//     let newText = text.replace(\"Text\", \"Replace\");\r\n//     setText(newText);\r\n//     props.showAlert(`Replace only \"Text\" word.`, \"success\");\r\n//   };\r\n//   const handleConcatClick = () => {\r\n//     let newText = text + \" This String is Concat\";\r\n//     setText(newText);\r\n//     props.showAlert(\"Concat Method Apllied\", \"success\");\r\n//   };\r\n//   const handleClearClick = () => {\r\n//     let newText = \"\";\r\n//     setText(newText);\r\n//     props.showAlert(\"Clear Screen!\", \"success\");\r\n//   };\r\n\r\n//   const handleCaptClick = () => {\r\n//     /*Explanation:\r\n\r\n//     ^\\w : first character of the string\r\n//     | : or\r\n//     \\s\\w : first character after whitespace\r\n//     (^\\w|\\s\\w) Capture the pattern.\r\n//     g Flag: Match all occurrences.*/\r\n\r\n//     let newText = text.replace(/(^\\w|\\s\\w)/g, (m) => m.toUpperCase());\r\n//     setText(newText);\r\n//     props.showAlert(\"Capitalized!\", \"success\");\r\n//   };\r\n\r\n//   const handleCopy = () => {\r\n//     let text = document.getElementById(\"myBox\");\r\n//     text.select();\r\n//     navigator.clipboard.writeText(text.value)\r\n//     // props.showAlert(\"Copied\", \"success\");\r\n//   };\r\n\r\n//   const handleExtraSpaces = () => {\r\n//     let newText = text.split(/[ ]+/);\r\n//     setText(newText.join(\" \"));\r\n//     props.showAlert(\"Removed Extra Space from given Lines\", \"success\");\r\n//   };\r\n\r\n//   const handleOnChange = (event) => {\r\n//     setText(event.target.value);\r\n//   };\r\n\r\n//   let [text, setText] = useState(\"\");\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <div style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n//         <h2>{props.heading}</h2>\r\n\r\n//         <div className=\"  my-3\">\r\n//           <textarea\r\n//             style={{\r\n//               backgroundColor: props.mode === \"dark\" ? \"grey\" : \"light\",\r\n//               color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n//             }}\r\n//             className=\"form-control\"\r\n//             value={text}\r\n//             onChange={handleOnChange}\r\n//             id=\"myBox\"\r\n//             rows=\"8\"\r\n//             placeholder=\"Enter Text here!\"\r\n//           ></textarea>\r\n\r\n//           <button className=\"btn btn-primary m-1\" onClick={handleUpClick}>\r\n//             Convert to UpperCase\r\n//           </button>\r\n\r\n//           <button className=\"btn btn-primary m-1\" onClick={handleLowClick}>\r\n//             Convert to lowerCase\r\n//           </button>\r\n\r\n//           <button className=\"btn btn-primary m-1\" onClick={handlesliceClick}>\r\n//             Slice\r\n//           </button>\r\n\r\n//           <button className=\"btn btn-primary m-1\" onClick={handleReplaceClick}>\r\n//             Replacing\r\n//           </button>\r\n\r\n//           <button className=\"btn btn-primary m-1\" onClick={handleConcatClick}>\r\n//             String concat\r\n//           </button>\r\n\r\n//           <button className=\"btn btn-primary m-1\" onClick={handleCaptClick}>\r\n//             Capitilized\r\n//           </button>\r\n\r\n//           <button className=\"btn btn-primary m-1\" onClick={handleCopy}>\r\n//             Copy Text\r\n//           </button>\r\n//           <button className=\"btn btn-primary m-1\" onClick={handleExtraSpaces}>\r\n//             Remove Extra Spaces\r\n//           </button>\r\n\r\n//           <button className=\"btn btn-primary m-1\" onClick={handleClearClick}>\r\n//             Clear\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//       <div style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n//         <h2>Summary</h2>\r\n//         <p>\r\n//           {/* Total words are: {text.length > 0 ? text.trim().split(\" \").length : 0}{\" \"} */}\r\n//           Total words are: {text.split(\" \").filter((element)=>{return element.length !== 0}).length}\r\n//           Total Character: {text.length}\r\n//         </p>\r\n//         <p>\r\n//           Taking Total time to read in minutes: {0.008 * text.split(\" \").length}\r\n//         </p>\r\n//         <h3>Preview</h3>\r\n//         <p>{text.length > 0 ? text : \"Enter Something above in TextBox!\"}</p>\r\n//       </div>\r\n//     </React.Fragment>\r\n//   );\r\n// }\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Upper Case!\", \"success\");\r\n  };\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lower Case!\", \"success\");\r\n  };\r\n  const handlesliceClick = () => {\r\n    let newText = text.slice(5, 10);\r\n    setText(newText);\r\n    props.showAlert(\"Slice Method Apply on index 5 to 10.\", \"success\");\r\n  };\r\n  const handleReplaceClick = () => {\r\n    let newText = text.replace(\"Text\", \"Replace\");\r\n    setText(newText);\r\n    props.showAlert(`Replace only \"Text\" word.`, \"success\");\r\n  };\r\n  const handleConcatClick = () => {\r\n    let newText = text + \" This String is Concat\";\r\n    setText(newText);\r\n    props.showAlert(\"Concat Method Apllied\", \"success\");\r\n  };\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Clear Screen!\", \"success\");\r\n  };\r\n\r\n  const handleCaptClick = () => {\r\n    /*Explanation:\r\n    ^\\w : first character of the string\r\n    | : or\r\n    \\s\\w : first character after whitespace\r\n    (^\\w|\\s\\w) Capture the pattern.\r\n    g Flag: Match all occurrences.*/\r\n\r\n    let newText = text.replace(/(^\\w|\\s\\w)/g, (m) => m.toUpperCase());\r\n    setText(newText);\r\n    props.showAlert(\"Capitalized!\", \"success\");\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    let text = document.getElementById(\"myBox\");\r\n    console.log('copy');\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value)\r\n    document.getSelection().removeAllRanges();\r\n    props.showAlert(\"Copied\", \"success\");\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Removed Extra Space from given Lines\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  let [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n        <h2>{props.heading}</h2>\r\n\r\n        <div className=\"  my-3\">\r\n          <textarea\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#c7c7c7\" : \"light\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            placeholder=\"Enter Text here!\"\r\n          ></textarea>\r\n\r\n          <button disabled={text.length === 0} className=\"btn btn-primary m-2\" onClick={handleUpClick}>\r\n            Convert to UpperCase\r\n          </button>\r\n\r\n          <button disabled={text.length === 0} className=\"btn btn-primary m-2\" onClick={handleLowClick}>\r\n            Convert to lowerCase\r\n          </button>\r\n\r\n          <button disabled={text.length === 0} className=\"btn btn-primary m-2\" onClick={handlesliceClick}>\r\n            Slice\r\n          </button>\r\n\r\n          <button disabled={text.length === 0} className=\"btn btn-primary m-2\" onClick={handleReplaceClick}>\r\n            Replacing\r\n          </button>\r\n\r\n          <button disabled={text.length === 0} className=\"btn btn-primary m-2\" onClick={handleConcatClick}>\r\n            String concat\r\n          </button>\r\n\r\n          <button disabled={text.length === 0} className=\"btn btn-primary m-2\" onClick={handleCaptClick}>\r\n            Capitilized\r\n          </button>\r\n\r\n          <button disabled={text.length === 0} className=\"btn btn-primary m-2\" onClick={handleCopy}>\r\n            Copy Text\r\n          </button>\r\n          <button disabled={text.length === 0} className=\"btn btn-primary m-2\" onClick={handleExtraSpaces}>\r\n            Remove Extra Spaces\r\n          </button>\r\n\r\n          <button disabled={text.length === 0} className=\"btn btn-primary m-2\" onClick={handleClearClick}>\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n        <h2>Summary</h2>\r\n        <p>\r\n          {/* Total words are: {text.length > 0 ? text.trim().split(\" \").length : 0}{\" \"} */}\r\n          Total words are: {text.split(\" \").filter((element)=>{return element.length !== 0}).length}\r\n          Total Character: {text.length}\r\n        </p>\r\n        <p>\r\n          Taking Total time to read in minutes: {0.008 * text.split(\" \").filter((element)=> {return element.length !==0}).length}\r\n        </p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length > 0 ? text : \"Nothing to Preview!\"}</p>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"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"},"metadata":{},"sourceType":"module"}